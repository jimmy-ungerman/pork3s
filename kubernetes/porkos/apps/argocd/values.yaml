argo-cd:
  global:
    domain: argocd.porkboi.io
    
  configs:
    cm:
      url: "https://argocd.porkboi.io"
      exec.enabled: true
      admin.enabled: false
      redis.compression: none
      kustomize.buildOptions: --enable-alpha-plugins --enable-exec
      dex.config: |
        connectors:
        - config:
            issuer: https://id.porkboi.io/application/o/argocd/
            clientID: 5gRWlq2Ne2CYKhSOTE0otkykQF062QmK3rprMhse
            clientSecret: $dex.authentik.clientSecret
            insecureEnableGroups: true
            scopes:
              - openid
              - profile
              - email
          name: authentik
          type: oidc
          id: authentik
      resource.ignoreResourceUpdatesEnabled: true
      resource.customizations.ignoreDifferences.deviceplugin.intel.com_GpuDevicePlugin: |
        jqPathExpressions:
          - '.metadata.annotations'
          - '.spec.resourceManager'
          - '.spec.tolerations'
      resource.customizations.ignoreDifferences.external-secrets.io_ExternalSecret: |
        jqPathExpressions:
          - '.spec.dataFrom[]?.find.conversionStrategy'
          - '.metadata.labels'
          - '.spec.dataFrom[]?.find.decodingStrategy'
          - '.spec.data[]?.remoteRef.decodingStrategy'
          - '.spec.data[]?.remoteRef.conversionStrategy'
          - '.spec.data[]?.remoteRef.metadataPolicy'
      resource.customizations.ignoreResourceUpdates.all: |
        jsonPointers:
          - /status
          - /metadata/generation
      resource.customizations.ignoreResourceUpdates.external-secrets.io_ExternalSecret: |
        jsonPointers:
        - /status/refreshTime
        # JQ equivalent of the above:
        # jqPathExpressions:
        # - .status.refreshTime
    params:
      server.insecure: true
      controller.diff.server.side: true
      redis.compression: none
    rbac:
      policy.csv: |
        p, role:admin, exec, create, */*, allow
        g, authentik Admins, role:admin
      scopes: "[groups]"

    secret:
      createSecret: false

  controller:
    replicas: 2
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true

  dex:
    replicas: 2
    enabled: true

  externalRedis:
    # -- External Redis server host
    host: dragonfly.database.svc.cluster.local

  redis:
    enabled: false

  server:
    replicas: 2
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
    ingress:
      enabled: true
      annotations:
        nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        nginx.ingress.kubernetes.io/ssl-passthrough: "true"
      ingressClassName: nginx
      extraTls:
        - hosts:
          - argocd.porkboi.io

  repoServer:
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true

  applicationSet:
    replicas: 2
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true