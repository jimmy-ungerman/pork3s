app-template:
  controllers:
    main:
      annotations:
        reloader.stakater.com/auto: "true"
      initContainers:
        init-db:
          image:
            repository: ghcr.io/onedr0p/postgres-init
            tag: 16.6
            pullPolicy: IfNotPresent
          envFrom: &envFrom
            - secretRef:
                name: sonarr-secret
      containers:
        app:
          image:
            repository: ghcr.io/onedr0p/sonarr-develop
            tag: 4.0.13.2931
          env:
            TZ: America/Boise
            SONARR__APP__INSTANCENAME: sonarr
            SONARR__APP__THEME: dark
            SONARR__SERVER__PORT: &port 80
            SONARR__LOG_LEVEL: info
            SONARR__AUTH__METHOD: External
            SONARR__AUTH__REQUIRED: DisabledForLocalAddresses
            SONARR__LOG__DBENABLED: "False"
            SONARR__UPDATE__BRANCH: develop
          envFrom: *envFrom  

          resources:
            requests:
              cpu: 10m
              memory: 256M
            limits:
              memory: 4Gi
          probes:
            liveness: &probes
              enabled: true
              custom: true
              spec:
                httpGet:
                  path: /ping
                  port: *port
                initialDelaySeconds: 0
                periodSeconds: 10
                timeoutSeconds: 1
                failureThreshold: 3
            readiness: *probes
            startup:
              enabled: false
      pod:
        securityContext:
          runAsUser: 568
          runAsGroup: 568
          fsGroup: 568
          fsGroupChangePolicy: OnRootMismatch
          supplementalGroups: [10000]

  service:
    app:
      controller: main
      ports:
        http:
          port: *port

  ingress:
    app:
      enabled: true
      className: nginx
      annotations:
        nginx.ingress.kubernetes.io/auth-url: |-
            http://authentik-server.default.svc.cluster.local:80/outpost.goauthentik.io/auth/nginx        
        nginx.ingress.kubernetes.io/auth-signin: |-
            https://sonarr.porkboi.io/outpost.goauthentik.io/start?rd=$scheme://$http_host$escaped_request_uri
        nginx.ingress.kubernetes.io/auth-response-headers: |-
            Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
        nginx.ingress.kubernetes.io/auth-snippet: |
            proxy_set_header X-Forwarded-Host $http_host;
      hosts:
        - host: &host "sonarr.porkboi.io"
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: app
                port: http
            - path: /outpost.goauthentik.io
              pathType: ImplementationSpecific
              service:
                name: authentik-server
                port: 80
      tls:
        - hosts:
            - *host
  persistence:
    config:
      existingClaim: sonarr
    cache:
      existingClaim: sonarr-cache
      globalMounts:
        - path: /config/MediaCover
    tmp:
      type: emptyDir
    media:
      type: nfs
      server: nas.porkboi.io
      path: /mnt/earth/media
      globalMounts:
        - path: /media