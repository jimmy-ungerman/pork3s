kube-prometheus-stack:
  crds:
    enabled: false
  cleanPrometheusOperatorObjectNames: true
  alertmanager:
    ingress:
      enabled: true
      annotations:      
        external-dns.alpha.kubernetes.io/target: porkboi.io
        external-dns.alpha.kubernetes.io/hostname: alertmanager.porkboi.io
        nginx.ingress.kubernetes.io/auth-url: |-
            http://authentik-server.default.svc.cluster.local:80/outpost.goauthentik.io/auth/nginx
        nginx.ingress.kubernetes.io/auth-signin: |-
            https://alertmanager.porkboi.io/outpost.goauthentik.io/start?rd=$scheme://$http_host$escaped_request_uri
        nginx.ingress.kubernetes.io/auth-response-headers: |-
            Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
        nginx.ingress.kubernetes.io/auth-snippet: |
            proxy_set_header X-Forwarded-Host $http_host;
      ingressClassName: nginx
      hosts: ["alertmanager.porkboi.io"]
      pathType: Prefix
    alertmanagerSpec:
      alertmanagerConfiguration:
        name: alertmanager
        global:
          resolveTimeout: 5m
      externalUrl: https://alertmanager.porkboi.io
      storage:
        volumeClaimTemplate:
          spec:
            storageClassName: ceph-block
            resources:
              requests:
                storage: 1Gi
  kubeScheduler:
    service:
      selector:
        k8s-app: kube-scheduler
  kubeControllerManager: &kubeControllerManager
    service:
      selector:
        k8s-app: kube-controller-manager
  kubeEtcd:
    <<: *kubeControllerManager # etcd runs on control plane nodes
  kubeProxy:
    enabled: false
  prometheus:
    ingress:
      enabled: true
      annotations:      
        external-dns.alpha.kubernetes.io/target: porkboi.io
        external-dns.alpha.kubernetes.io/hostname: metrics.porkboi.io
        nginx.ingress.kubernetes.io/auth-url: |-
            http://authentik-server.default.svc.cluster.local:80/outpost.goauthentik.io/auth/nginx
        nginx.ingress.kubernetes.io/auth-signin: |-
            https://metrics.porkboi.io/outpost.goauthentik.io/start?rd=$scheme://$http_host$escaped_request_uri
        nginx.ingress.kubernetes.io/auth-response-headers: |-
            Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
        nginx.ingress.kubernetes.io/auth-snippet: |
            proxy_set_header X-Forwarded-Host $http_host;
      ingressClassName: nginx
      hosts: ["metrics.porkboi.io"]
      pathType: Prefix
    prometheusSpec:
      scrapeInterval: 1m # Must match interval in Grafana Helm chart
      podMonitorSelectorNilUsesHelmValues: false
      probeSelectorNilUsesHelmValues: false
      ruleSelectorNilUsesHelmValues: false
      scrapeConfigSelectorNilUsesHelmValues: false
      serviceMonitorSelectorNilUsesHelmValues: false
      enableAdminAPI: true
      walCompression: true
      enableFeatures:
        - auto-gomemlimit
        - memory-snapshot-on-shutdown
        - new-service-discovery-manager
      retention: 14d
      retentionSize: 70GB
      resources:
        requests:
          cpu: 100m
        limits:
          memory: 1500Mi
      storageSpec:
        volumeClaimTemplate:
          spec:
            storageClassName: openebs-hostpath
            resources:
              requests:
                storage: 50Gi
  prometheus-node-exporter:
    fullnameOverride: node-exporter
    prometheus:
      monitor:
        enabled: true
        relabelings:
          - action: replace
            regex: (.*)
            replacement: $1
            sourceLabels: ["__meta_kubernetes_pod_node_name"]
            targetLabel: kubernetes_node
  kube-state-metrics:
    fullnameOverride: kube-state-metrics
    metricLabelsAllowlist:
      - pods=[*]
      - deployments=[*]
      - persistentvolumeclaims=[*]
    prometheus:
      monitor:
        enabled: true
        relabelings:
          - action: replace
            regex: (.*)
            replacement: $1
            sourceLabels: ["__meta_kubernetes_pod_node_name"]
            targetLabel: kubernetes_node
  grafana:
    enabled: false
    forceDeployDashboards: true