grafana:
  extraInitContainers:
    - name: 01-init-db
      image: ghcr.io/onedr0p/postgres-init:16.3
      imagePullPolicy: IfNotPresent
      envFrom:
        - secretRef:
            name: &secret grafana-secret

  replicas: 2

  env:
    GF_AUTH_GENERIC_OAUTH_ENABLED: "true"
    GF_AUTH_GENERIC_OAUTH_NAME: "authentik"
    GF_AUTH_GENERIC_OAUTH_SCOPES: "openid profile email"
    GF_AUTH_GENERIC_OAUTH_AUTH_URL: "https://id.porkboi.io/application/o/authorize/"
    GF_AUTH_GENERIC_OAUTH_TOKEN_URL: "https://id.porkboi.io/application/o/token/"
    GF_AUTH_GENERIC_OAUTH_API_URL: "https://id.porkboi.io/application/o/userinfo/"
    GF_AUTH_SIGNOUT_REDIRECT_URL: "https://id.porkboi.io/application/o/grafana/end-session/"
    GF_SECURITY_DISABLE_INITIAL_ADMIN_CREATION: true
    GF_AUTH_OAUTH_AUTO_LOGIN: "true"
    GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH: "contains(groups[*], 'authentik Admins') && 'Admin' || contains(groups[*], 'Grafana Editors') && 'Editor' || 'Viewer'"
    GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
    GF_EXPLORE_ENABLED: true
    GF_FEATURE_TOGGLES_ENABLE: publicDashboards
    GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: natel-discrete-panel,pr0ps-trackmap-panel,panodata-map-panel
    GF_SECURITY_COOKIE_SAMESITE: grafana
    GF_SERVER_ROOT_URL: https://grafana.porkboi.io
  envFromSecrets:
    - name: *secret
  grafana.ini:
    analytics:
      check_for_updates: false
      check_for_plugin_updates: false
      reporting_enabled: false
    auth:
      oauth_auto_login: true
      oauth_allow_insecure_email_lookup: true
    auth.generic_oauth:
      enabled: true
      name: Authentik
      icon: signin
      scopes: openid profile email groups
      empty_scopes: false
      login_attribute_path: preferred_username
      groups_attribute_path: groups
      name_attribute_path: name
      use_pkce: true
    auth.generic_oauth.group_mapping:
      org_id: 1
    auth.basic:
      enabled: false
    auth.anonymous:
      enabled: false
    news:
      news_feed_enabled: false
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: default
          orgId: 1
          folder: ""
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default
        - name: ceph
          orgId: 1
          folder: Ceph
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/ceph
        - name: kubernetes
          orgId: 1
          folder: Kubernetes
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/kubernetes
        - name: nginx
          orgId: 1
          folder: Nginx
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/nginx
        - name: argo
          orgId: 1
          folder: Argo
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/argocd
        - name: unifi
          orgId: 1
          folder: Unifi
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/unifi
  datasources:
    datasources.yaml:
      apiVersion: 1
      deleteDatasources:
        - { name: Alertmanager, orgId: 1 }
        - { name: Loki, orgId: 1 }
        - { name: Prometheus, orgID: 1 }
      datasources:
        - name: Prometheus
          type: prometheus
          uid: prometheus
          access: proxy
          url: http://prometheus-operated.observability.svc.cluster.local:9090
          jsonData:
            timeInterval: 1m
          isDefault: true
        - name: Loki
          type: loki
          uid: loki
          access: proxy
          url: http://loki-headless.observability.svc.cluster.local:3100
          jsonData:
            maxLines: 250
        - name: Alertmanager
          type: alertmanager
          uid: alertmanager
          access: proxy
          url: http://alertmanager-operated.observability.svc.cluster.local:9093
          jsonData:
            implementation: prometheus
  dashboards:
    default:
      external-dns:
        # renovate: depName="External-dns"
        gnetId: 15038
        revision: 1
        datasource: Prometheus
      node-exporter-full:
        # renovate: depName="Node Exporter Full"
        gnetId: 1860
        revision: 33
        datasource: Prometheus
      dragonfly:
        url: https://raw.githubusercontent.com/dragonflydb/dragonfly/main/tools/local/monitoring/grafana/provisioning/dashboards/dashboard.json
        datasource: Prometheus
      cloudnative-pg:
        url: https://raw.githubusercontent.com/cloudnative-pg/charts/main/charts/cloudnative-pg/monitoring/grafana-dashboard.json
        datasource: Prometheus
      cert-manager:
        url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/cert-manager/dashboards/cert-manager.json
        datasource: Prometheus
      external-secrets:
        url: https://raw.githubusercontent.com/external-secrets/external-secrets/main/docs/snippets/dashboard.json
        datasource: Prometheus
    ceph:
      ceph-cluster:
        # renovate: depName="Ceph Cluster"
        gnetId: 2842
        revision: 17
        datasource: Prometheus
      ceph-osd:
        # renovate: depName="Ceph - OSD (Single)"
        gnetId: 5336
        revision: 9
        datasource: Prometheus
      ceph-pools:
        # renovate: depName="Ceph - Pools"
        gnetId: 5342
        revision: 9
        datasource: Prometheus
    kubernetes:
      kubernetes-api-server:
        # renovate: depName="Kubernetes / System / API Server"
        gnetId: 15761
        revision: 14
        datasource: Prometheus
      kubernetes-coredns:
        # renovate: depName="Kubernetes / System / CoreDNS"
        gnetId: 15762
        revision: 13
        datasource: Prometheus
      kubernetes-global:
        # renovate: depName="Kubernetes / Views / Global"
        gnetId: 15757
        revision: 31
        datasource: Prometheus
      kubernetes-namespaces:
        # renovate: depName="Kubernetes / Views / Namespaces"
        gnetId: 15758
        revision: 27
        datasource: Prometheus
      kubernetes-nodes:
        # renovate: depName="Kubernetes / Views / Nodes"
        gnetId: 15759
        revision: 19
        datasource: Prometheus
      kubernetes-pods:
        # renovate: depName="Kubernetes / Views / Pods"
        gNetId: 15760
        revision: 21
        datasource: Prometheus
      kubernetes-volumes:
        # renovate: depName="K8s / Storage / Volumes / Cluster"
        gnetId: 11454
        revision: 14
        datasource: Prometheus
    nginx:
      nginx:
        url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
        datasource: Prometheus
      nginx-request-handling-performance:
        url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/request-handling-performance.json
        datasource: Prometheus
    argo:
      argocd-dashboard:
        url: https://raw.githubusercontent.com/argoproj/argo-cd/master/examples/dashboard.json
        datasource: Prometheus
    unifi:
      unifi-insights:
        # renovate: depName="UniFi-Poller: Client Insights - Prometheus"
        gnetId: 11315
        revision: 9
        datasource: Prometheus
      unifi-network-sites:
        # renovate: depName="UniFi-Poller: Network Sites - Prometheus"
        gnetId: 11311
        revision: 5
        datasource: Prometheus
      unifi-uap:
        # renovate: depName="UniFi-Poller: UAP Insights - Prometheus"
        gnetId: 11314
        revision: 10
        datasource: Prometheus
      unifi-usw:
        # renovate: depName="UniFi-Poller: USW Insights - Prometheus"
        gnetId: 11312
        revision: 9
        datasource: Prometheus
  sidecar:
    dashboards:
      enabled: true
      searchNamespace: ALL
      labelValue: ""
      label: grafana_dashboard
      folderAnnotation: grafana_folder
      provider:
        disableDelete: true
        foldersFromFilesStructure: true
    datasources:
      enabled: true
      searchNamespace: ALL
      labelValue: ""
  plugins:
    - grafana-clock-panel
    - grafana-piechart-panel
    - grafana-worldmap-panel
    - natel-discrete-panel
    - pr0ps-trackmap-panel
    - vonage-status-panel
  serviceMonitor:
    enabled: true
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      external-dns.alpha.kubernetes.io/target: porkboi.io
      external-dns.alpha.kubernetes.io/hostname: grafana.porkboi.io
    hosts:
      - &host grafana.porkboi.io
    tls:
      - hosts:
          - *host
  persistence:
    enabled: false
  testFramework:
    enabled: false