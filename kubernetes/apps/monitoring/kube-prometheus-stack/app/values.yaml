cleanPrometheusOperatorObjectNames: true
crds:
  enabled: false
prometheus:
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:      
      external-dns.alpha.kubernetes.io/target: porkboi.io
      external-dns.alpha.kubernetes.io/hostname: prom.porkboi.io
      nginx.ingress.kubernetes.io/auth-method: GET
      nginx.ingress.kubernetes.io/auth-url: http://authelia.default.svc.cluster.local/api/verify
      nginx.ingress.kubernetes.io/auth-signin: https://auth.porkboi.io?rm=$request_method
      nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
      nginx.ingress.kubernetes.io/auth-snippet: |
        proxy_set_header X-Forwarded-Method $request_method;
    pathType: Prefix
    hosts:
      - &host prom.porkboi.io
    tls:
      - hosts:
          - *host
  prometheusSpec:
    replicas: 2
    replicaExternalLabelName: __replica__
    ruleSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelectorNilUsesHelmValues: false
    probeSelectorNilUsesHelmValues: false
    scrapeConfigSelectorNilUsesHelmValues: false
    enableAdminAPI: true
    walCompression: true
    enableFeatures:
      - auto-gomaxprocs
      - memory-snapshot-on-shutdown
      - new-service-discovery-manager
    retention: 2d
    retentionSize: 15GB
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: rook-ceph-block
          resources:
            requests:
              storage: 20Gi

alertmanager:
  ingress:
    enabled: true
    pathType: Prefix
    ingressClassName: nginx
    annotations:
      external-dns.alpha.kubernetes.io/target: porkboi.io
      external-dns.alpha.kubernetes.io/hostname: alertmanager.porkboi.io
      nginx.ingress.kubernetes.io/auth-method: GET
      nginx.ingress.kubernetes.io/auth-url: http://authelia.default.svc.cluster.local/api/verify
      nginx.ingress.kubernetes.io/auth-signin: https://auth.porkboi.io?rm=$request_method
      nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
      nginx.ingress.kubernetes.io/auth-snippet: |
        proxy_set_header X-Forwarded-Method $request_method;
    hosts:
      - &host alertmanager.porkboi.io
    tls:
      - hosts:
          - *host
  alertmanagerSpec:
    replicas: 2
    useExistingSecret: true
    configSecret: alertmanager-secret
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: rook-ceph-block
          resources:
            requests:
              storage: 1Gi
grafana:
  enabled: false
  forceDeployDashboards: true


kubelet:
  enabled: true
kubeApiServer:
  enabled: true

kubeControllerManager:
  enabled: true
  endpoints: &cp
    - 10.1.0.2
    - 10.1.0.3
    - 10.1.0.4

kubeEtcd:
  enabled: true
  endpoints: *cp
kubeProxy:
  enabled: false # Disabled because eBPF
  endpoints: *cp
kubeScheduler:
  enabled: true
  endpoints: *cp


nodeExporter:
  enabled: false

kubeStateMetrics:
  enabled: false