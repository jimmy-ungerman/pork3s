image:
  registry: quay.io
  repository: thanos/thanos
  tag: v0.31.0
existingObjstoreSecret: thanos-secret
queryFrontend:
  enabled: true
  replicaCount: 1
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      nginx.ingress.kubernetes.io/auth-method: GET
      nginx.ingress.kubernetes.io/auth-url: http://authelia.default.svc.cluster.local/api/verify
      nginx.ingress.kubernetes.io/auth-signin: https://auth.porkboi.io?rm=$request_method
      nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
      nginx.ingress.kubernetes.io/auth-snippet: |
        proxy_set_header X-Forwarded-Method $request_method;
      external-dns.alpha.kubernetes.io/target: porkboi.io
      nginx.ingress.kubernetes.io/whitelist-source-range: |
        10.0.0.0/24
    hostname: &host thanos.porkboi.io
    tls: true
    extraTls:
      - hosts:
          - *host
query:
  enabled: true
  replicaCount: 1
  replicaLabel: ["__replica__"]
  dnsDiscovery:
    sidecarsService: kube-prometheus-stack-thanos-discovery
    sidecarsNamespace: monitoring
bucketweb:
  enabled: true
  replicaCount: 1
compactor:
  enabled: true
  extraFlags:
    - --compact.concurrency=4
    - --delete-delay=30m
  retentionResolutionRaw: 14d
  retentionResolution5m: 14d
  retentionResolution1h: 14d
  persistence:
    enabled: true
    storageClass: longhorn
    size: 20Gi
storegateway:
  enabled: true
  replicaCount: 1
  persistence:
    enabled: true
    storageClass: longhorn
    size: 20Gi
  podAnnotations:
    argocd.argoproj.io/compare-options: IgnoreExtraneous
metrics:
  enabled: true
  serviceMonitor:
    enabled: true