initContainers:
  01-init-db:
    image: ghcr.io/onedr0p/postgres-initdb:14.8
    imagePullPolicy: IfNotPresent
    envFrom:
      - secretRef:
          name: authelia-secret
controller:
  replicas: 2
  strategy: RollingUpdate
  annotations:
    reloader.stakater.com/auto: "true"

env:
  AUTHELIA_AUTHENTICATION_BACKEND_LDAP_ADDITIONAL_USERS_DN: ou=users
  AUTHELIA_AUTHENTICATION_BACKEND_LDAP_BASE_DN: dc=home
  AUTHELIA_AUTHENTICATION_BACKEND_LDAP_DISPLAY_NAME_ATTRIBUTE: givenName
  AUTHELIA_AUTHENTICATION_BACKEND_LDAP_GROUPS_FILTER: "(&(memberUid={username})(objectClass=posixGroup))"
  AUTHELIA_AUTHENTICATION_BACKEND_LDAP_GROUP_NAME_ATTRIBUTE: cn
  AUTHELIA_AUTHENTICATION_BACKEND_LDAP_URL: "ldap://glauth.default.svc.cluster.local:389"
  AUTHELIA_AUTHENTICATION_BACKEND_LDAP_USER: cn=search,ou=svcaccts,dc=home
  AUTHELIA_AUTHENTICATION_BACKEND_LDAP_USERNAME_ATTRIBUTE: uid
  AUTHELIA_AUTHENTICATION_BACKEND_LDAP_USERS_FILTER: "(&({username_attribute}={input})(objectClass=posixAccount))"
  AUTHELIA_AUTHENTICATION_BACKEND_PASSWORD_RESET_DISABLE: "true"
  AUTHELIA_DEFAULT_REDIRECTION_URL: https://auth.porkboi.io
  AUTHELIA_DUO_API_DISABLE: "true"
  AUTHELIA_LOG_LEVEL: info
  AUTHELIA_NOTIFIER_DISABLE_STARTUP_CHECK: "true"
  AUTHELIA_NOTIFIER_FILESYSTEM_FILENAME: "/config/notification.txt"
  AUTHELIA_SERVER_DISABLE_HEALTHCHECK: "true"
  AUTHELIA_SERVER_ADDRESS: 0.0.0.0:80
  AUTHELIA_SESSION_DOMAIN: porkboi.io
  AUTHELIA_SESSION_REDIS_DATABASE_INDEX: 14
  AUTHELIA_SESSION_REDIS_HOST: redis.default.svc.cluster.local
  AUTHELIA_TELEMETRY_METRICS_ADDRESS: "tcp://0.0.0.0:8080"
  AUTHELIA_TELEMETRY_METRICS_ENABLED: "true"
  AUTHELIA_THEME: grey
  AUTHELIA_TOTP_ISSUER: authelia.com
  AUTHELIA_WEBAUTHN_DISABLE: "true"

image:
  repository: ghcr.io/authelia/authelia
  tag: 4.37.5
envFrom:
  - secretRef:
      name: authelia-secret
enableServiceLinks: false
service:
  main:
    ports:
      http:
        port: &port 80
      metrics:
        enabled: true
        port: 8080
# serviceMonitor:
#   main:
#     enabled: true
#     endpoints:
#       - port: metrics
#         scheme: http
#         path: /metrics
#         interval: 1m
#         scrapeTimeout: 10s
probes:
  liveness: &probes
    enabled: true
    custom: true
    spec:
      httpGet:
        path: /api/health
        port: *port
      initialDelaySeconds: 0
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 3
  readiness: *probes
  startup:
    enabled: false
ingress:
  main:
    enabled: true
    ingressClassName: nginx
    annotations:
      external-dns.alpha.kubernetes.io/target: porkboi.io
      nginx.ingress.kubernetes.io/configuration-snippet: |
        add_header Cache-Control "no-store";
        add_header Pragma "no-cache";
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-XSS-Protection "1; mode=block";
      hajimari.io/icon: mdi:shield-account
    hosts:
      - host: &host auth.porkboi.io
        paths:
          - path: /
            pathType: Prefix
    tls:
      - hosts:
          - *host
podSecurityContext:
  runAsUser: 568
  runAsGroup: 568
  fsGroup: 568
  fsGroupChangePolicy: OnRootMismatch
persistence:
  config:
    enabled: true
    type: configMap
    name: authelia-configmap
    subPath: configuration.yml
    mountPath: /config/configuration.yml
    readOnly: false
topologySpreadConstraints:
  - maxSkew: 1
    topologyKey: kubernetes.io/hostname
    whenUnsatisfiable: DoNotSchedule
    labelSelector:
      matchLabels:
        app.kubernetes.io/name: authelia
resources:
  requests:
    cpu: 5m
    memory: 10Mi
  limits:
    memory: 100Mi
