controllers:
  main:
    annotations:
      reloader.stakater.com/auto: "true"
    containers:
      main:
        image:
          repository: ghcr.io/onedr0p/radarr-nightly
          tag: 5.1.3.8226
        env:
          TZ: America/Boise
          RADARR__INSTANCE_NAME: Radarr
          RADARR__PORT: &port 80
          RADARR__APPLICATION_URL: "https://radarr.porkboi.io/"
          RADARR__LOG_LEVEL: info
        resources:
          requests:
            cpu: 10m
            memory: 256M
          limits:
            memory: 1Gi
    pod:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [10000]
service:
  main:
    ports:
      http:
        port: *port

ingress:
  main:
    enabled: true
    className: nginx
    annotations:
      external-dns.alpha.kubernetes.io/target: porkboi.io
      external-dns.alpha.kubernetes.io/hostname: radarr.porkboi.io
      nginx.ingress.kubernetes.io/auth-method: GET
      nginx.ingress.kubernetes.io/auth-url: http://authelia.default.svc.cluster.local/api/verify
      nginx.ingress.kubernetes.io/auth-signin: https://auth.porkboi.io?rm=$request_method
      nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
      nginx.ingress.kubernetes.io/auth-snippet: |
        proxy_set_header X-Forwarded-Method $request_method;
    hosts:
      - host: &host "radarr.porkboi.io"
        paths:
          - path: /
            pathType: Prefix
            service:
              name: main
              port: http
    tls:
      - hosts:
          - *host
persistence:
  config:
    enabled: true
    existingClaim: radarr-config
  media:
    existingClaim: media