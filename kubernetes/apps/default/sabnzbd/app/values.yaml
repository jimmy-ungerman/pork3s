controllers:
  main:
    type: statefulset
    annotations:
      reloader.stakater.com/auto: "true"
    containers:
      main:
        image:
          repository: ghcr.io/onedr0p/sabnzbd
          tag: 4.1.0@sha256:f2f39716cf0c4bc40dc70f7f86037cdf43f06c05b8f33a360ab7bc5371250f8d
        env:
          TZ: America/Boise
          SABNZBD__PORT: &port 80
          SABNZBD__HOST_WHITELIST_ENTRIES: >-
            sabnzbd,
            sabnzbd.default,
            sabnzbd.default.svc,
            sabnzbd.default.svc.cluster,
            sabnzbd.default.svc.cluster.local,
            sabnzbd.porkboi.io
        probes:
          liveness: &probes
            enabled: true
            custom: true
            spec:
              httpGet:
                path: /api?mode=version
                port: *port
              initialDelaySeconds: 0
              periodSeconds: 10
              timeoutSeconds: 1
              failureThreshold: 3
          readiness: *probes
          startup:
            enabled: false
          resources:
            cpu: 100m
            memory: 2Gi
          limits:
            memory: 8Gi
    pod:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [10000]
    statefulset:
      volumeClaimTemplates:
        - name: config
          accessMode: ReadWriteOnce
          size: 1Gi
          storageClass: rook-ceph-block
          globalMounts:
            - path: /config
service:
  main:
    ports:
      http:
        port: *port
ingress:
  main:
    enabled: true
    className: nginx
    annotations:
      external-dns.alpha.kubernetes.io/target: porkboi.io
      external-dns.alpha.kubernetes.io/hostname: sabnzbd.porkboi.io
      nginx.ingress.kubernetes.io/auth-method: GET
      nginx.ingress.kubernetes.io/auth-url: http://authelia.default.svc.cluster.local/api/verify
      nginx.ingress.kubernetes.io/auth-signin: https://auth.porkboi.io?rm=$request_method
      nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
      nginx.ingress.kubernetes.io/auth-snippet: |
        proxy_set_header X-Forwarded-Method $request_method;
    hosts:
      - host: &host "sabnzbd.porkboi.io"
        paths:
          - path: /
            service:
              name: main
              port: http
    tls:
      - hosts:
          - *host

persistence:
  media:
    existingClaim: media