---
- name: Cluster Installation
  hosts:
    - master
    - worker
  become: true
  gather_facts: true
  any_errors_fatal: true
  pre_tasks:
    - name: Pausing for 2 seconds...
      ansible.builtin.pause:
        seconds: 2
  tasks:
    - name: Check if cluster is installed
      ansible.builtin.stat:
        path: /etc/rancher/k3s/config.yaml
      register: k3s_check_installed
      check_mode: false

    - name: Set manifest facts
      ansible.builtin.set_fact:
        k3s_server_manifests_templates: []
        k3s_server_manifests_urls: []
      when: k3s_check_installed.stat.exists

    - name: Create the k3s data directory
      ansible.builtin.file:
        path: /var/lib/rancher/k3s
        state: directory
        owner: root
        group: root
        mode: 0755

    - name: Install Kubernetes
      ansible.builtin.include_role:
        name: xanmanning.k3s
        public: true
      vars:
        k3s_state: installed

    - name: Copy kubeconfig to provision folder
      run_once: true
      ansible.builtin.fetch:
        src: /etc/rancher/k3s/k3s.yaml
        dest: "~/.kube/config"
        flat: true
      when:
        - k3s_control_node is defined
        - k3s_control_node

    - name: Update kubeconfig with the right IPv4 address
      delegate_to: localhost
      become: false
      run_once: true
      ansible.builtin.replace:
        path: "~/.kube/config"
        regexp: "https://127.0.0.1:6443"
        replace: "https://{{ k3s_registration_address }}:6443"

    - name: Install Cilium CNI
      delegate_to: localhost
      become: false
      run_once: true
      kubernetes.core.helm:
        name: cilium
        chart_ref: cilium/cilium
        release_namespace: kube-system
        values: "{{ lookup('template', 'ciliumValues.yml.j2') | from_yaml }}"

    - name: Resource Readiness Check
      run_once: true
      kubernetes.core.k8s_info:
        kubeconfig: /etc/rancher/k3s/k3s.yaml
        kind: "{{ item.kind }}"
        name: "{{ item.name }}"
        namespace: "{{ item.namespace | default('') }}"
        wait: true
        wait_sleep: 10
        wait_timeout: 360
      loop:
        - kind: DaemonSet
          name: cilium
          namespace: kube-system
        - kind: DaemonSet
          name: kube-vip-ds
          namespace: kube-system
      register: resource_check

    - name: Install Cilium BGPPeerPolicy
      delegate_to: localhost
      become: false
      run_once: true
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('template', 'ciliumBGPPeeringPolicy.yml.j2') | from_yaml }}"

    - name: Install Cilium BGPPeerPolicy
      delegate_to: localhost
      become: false
      run_once: true
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('template', 'ciliumLoadBalancerIPPool.yml.j2') | from_yaml }}"

    # Cleaning up the manifests from the /var/lib/rancher/k3s/server/manifests
    # directory is needed because k3s has an awesome
    # "feature" to always deploy these on restarting
    # the k3s systemd service. Removing them does
    # not uninstall the manifests.

    # Removing them means we can manage the lifecycle
    # of these components outside of the
    # /var/lib/rancher/k3s/server/manifests directory

    - name: Remove deployed manifest templates
      ansible.builtin.file:
        path: "{{ k3s_server_manifests_dir }}/{{ item | basename | regex_replace('\\.j2$', '') }}"
        state: absent
      loop: "{{ k3s_server_manifests_templates | default([]) }}"

    - name: Remove deployed manifest urls
      ansible.builtin.file:
        path: "{{ k3s_server_manifests_dir }}/{{ item.filename }}"
        state: absent
      loop: "{{ k3s_server_manifests_urls | default([]) }}"
